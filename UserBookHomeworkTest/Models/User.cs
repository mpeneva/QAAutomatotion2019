// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using UserBookHomeworkTest;
//
//    var user = User.FromJson(jsonString);

namespace UserBookHomeworkTest
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using Newtonsoft.Json;


    using UserBookHomeworkTest.Models;
    public partial class User : UserBookHomeworkTestBaseClass
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("firstName")]
        public string FirstName { get; set; }

        [JsonProperty("lastName")]
        public string LastName { get; set; }

        [JsonProperty("wishlistId")]
        public long WishlistId { get; set; }

        [JsonProperty("createdAt")]
        public DateTimeOffset CreatedAt { get; set; }

        [JsonProperty("updatedAt")]
        public DateTimeOffset UpdatedAt { get; set; }

        [JsonProperty("householdId")]
        public long HouseholdId { get; set; }

        public static User UserProducer(string userName, int index, int wishlistId, long householdId)
        {
            return new User
            {
                FirstName = String.Concat(userName, index),
                LastName = String.Concat(userName,index),
                Email = "testemail@abv.bg",
                WishlistId = wishlistId,
                HouseholdId = householdId,
                CreatedAt = new DateTimeOffset(DateTime.Now),
                UpdatedAt = new DateTimeOffset(DateTime.Now)
            };
        }

        public static Hashtable LinkUserWithBook(Hashtable userHouseHoldIdTable, Hashtable bookIdTable)
        {
            Hashtable userBookContent = new Hashtable();
            foreach (int key in userHouseHoldIdTable.Keys)
            {
                foreach (int bookIdKey in bookIdTable)
                {
                    if(key == bookIdKey)
                    {
                        userBookContent.Add(userHouseHoldIdTable, bookIdTable);
                    }
                }
            }            
            return userBookContent;
        }

        public static User FromJson(string json) => JsonConvert.DeserializeObject<User>(json, UserBookHomeworkTest.Helpers.Converter.Settings);
    }

}
